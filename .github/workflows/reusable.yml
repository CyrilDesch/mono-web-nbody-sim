name: Reusable Workflow

on:
  workflow_call:
    inputs:
      jacoco_report:
        description: 'Generate JaCoCo report'
        required: false
        type: boolean
        default: true
      security_analysis:
        description: 'Run security analysis'
        required: false
        type: boolean
        default: false
      production_build:
        description: 'Build for production'
        required: false
        type: boolean
        default: false
      build_frontend:
        description: 'Build frontend'
        required: false
        type: boolean
        default: false

jobs:
  build-test-and-package:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
      
      # Setup Node.js and Yarn cache if frontend build is needed
      - name: Setup Node.js
        if: ${{ inputs.build_frontend }}
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: './frontend/yarn.lock'

      # Install frontend dependencies early to parallelize with backend build
      - name: Install Frontend Dependencies
        if: ${{ inputs.build_frontend }}
        working-directory: ./frontend
        run: yarn install --frozen-lockfile
      
      # Combined build, test and package step
      - name: Build, Test and Package
        run: |
          if [[ "${{ inputs.production_build }}" == "true" ]]; then
            ./gradlew build test assemble jacocoTestReport -Pprod
          else
            ./gradlew build test assemble jacocoTestReport
          fi
      
      # Build frontend in parallel with test report processing
      - name: Build Frontend
        if: ${{ inputs.build_frontend }}
        working-directory: ./frontend
        run: yarn build
      
      - name: Generate Badge for Test Coverage
        if: ${{ inputs.jacoco_report }}
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: "**/build/reports/jacoco/test/jacocoTestReport.csv"
          badges-directory: .github/badges
          
      - name: Upload Code Coverage
        if: ${{ inputs.jacoco_report }}
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: |
            **/build/reports/jacoco/
            **/build/reports/tests/
            .github/badges/
      
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **/build/libs/*.jar
            frontend/dist/ 